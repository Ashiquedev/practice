---
  apiVersion: v1
  kind: Service
  metadata:
    name: openmrs-svc
    labels:
      name: openmrs
  spec:
    ports:
      - nodePort: 30163
        port: 8080
        targetPort: 8080
        protocol: TCP
    selector:
      app: openmrs
    type: NodePort


---
apiVersion: v1
kind: PersistentVolume
metadata:
    name: openmrs-persistent-storage
    labels:
      app: mysql
      tier: database
spec:
    accessModes:
      - ReadWriteOnce
    capacity:
      storage: 1Gi
    awsElasticBlockStore:
            volumeID: "vol-0aa7cb87bec485654"
            fsType: xfs
---
# Define a 'Persistent Volume Claim'(PVC) for Storage, dynamically provisioned by cluster
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: openmrs-pv-claim # name of PVC essential for identifying the storage data
  labels:
    app: openmrs
spec:
  selector: 
    matchLabels:
      app: openmrs
  accessModes:
    - ReadWriteOnce   #This specifies the mode of the claim that we are trying to create.
  resources:
    requests:
      storage: 1Gi    #This will tell kubernetes about the amount of space we are trying to claim.


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: openmrs
spec:
  selector:
    matchLabels:
      app: openmrs
  replicas: 3
  template:
    metadata:
      labels:
        app: openmrs
    spec:
      containers:
        - name: openmrs
          image: ashik1431/openmrs:1.0
          ports:
            - containerPort: 8080
          env:   # Setting Enviornmental Variables
            - name: DB_HOST   # Setting Database host address from configMap
              valueFrom:
                configMapKeyRef:
                  name: db-config  # name of configMap
                  key: host
            - name: DB_NAME  # Setting Database name from configMap
              valueFrom:
                configMapKeyRef:
                  name: db-config
                  key: name
            - name: DB_USERNAME  # Setting Database username from Secret
              valueFrom:
                secretKeyRef:
                  name: db-user # Secret Name
                  key: username
            - name: DB_PASSWORD # Setting Database password from Secret
              valueFrom:
                secretKeyRef:
                  name: db-user
                  key: Password
          volumeMounts:        # Mounting volume obtained from Persistent Volume Claim
            - name: openmrs-persistent-storage
              mountPath: /var/lib/mysql #This is the path in the container on which the mounting will take place.
      volumes:
        - name: mysql-persistent-storage # Obtaining 'volume' from PVC
          persistentVolumeClaim:
            claimName: openmrs-pv-claim
