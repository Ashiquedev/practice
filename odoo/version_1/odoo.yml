---
- name: installing odoo
  hosts: all
  become: yes 
  vars:
    - db_user: odoo15
    - db_password: odoo15
    - db_name: odoo15
  tasks:
    - name: install Git , Pip , Node.js , and development [tools required to build]
      ansible.builtin.package:
        name:  [ "git","acl","python3-pip","pip","build-essential","wget","python3-dev","python3-venv","python3-wheel","libfreetype6-dev","libxml2-dev","libzip-dev","libldap2-dev","libsasl2-dev","python3-setuptools","node-less","libjpeg-dev","zlib1g-dev","libpq-dev","libxslt1-dev","libldap2-dev","libtiff5-dev","libjpeg8-dev","libopenjp2-7-dev","liblcms2-dev","libwebp-dev","libharfbuzz-dev","libfribidi-dev","libxcb1-dev" ]
        update_cache: yes
        state: present
    - name: Ensure group "odoo15" exists
      ansible.builtin.group:
        name: odoo15
        state: present
    - name: create a new system user and group with home directory /opt/odoo15 that will run the Odoo service
      ansible.builtin.user:
        name: odoo15
        create_home: yes
        group: odoo15
        home: /opt/odoo15
        state: present
        shell: /bin/bash
        system: yes
        state: present
    - name: Adding odoo15 to sudoers group
      ansible.builtin.template:
        src: 'sudoers.j2'
        dest: /etc/sudoers
    - name: Installing wkhtmltopdf
      ansible.builtin.apt:
        deb: https://github.com/wkhtmltopdf/wkhtmltopdf/releases/download/0.12.5/wkhtmltox_0.12.5-1.bionic_amd64.deb
        state: present
    - name: Clone the Odoo 15 source code from GitHub
      become_user: odoo15
      become: yes
      ansible.builtin.git:
        clone: yes
        depth: 1
        dest: /opt/odoo15/odoo
        recursive: yes
        repo: https://github.com/odoo/odoo.git
        version: 15.0
    - name: Install virtualenv via pip
      pip:
        name: virtualenv
        executable: pip3
    - name: Create a new Python virtual environment for Odoo
      become_user: odoo15
      become: yes
      ansible.builtin.pip:
        chdir: /opt/odoo15
        state: present  
        name: "{{item}}"
      with_items:
        - setuptools
        - wheel
    - name: requrements.txt
      become_user: odoo15
      become: yes
      ansible.builtin.pip:
        chdir: /opt/odoo15
        virtualenv: /opt/odoo15/venvs/odoo-venv
        virtualenv_python: python3
        requirements: /opt/odoo15/odoo/requirements.txt
        state: present
    - name: Create a directory if it does not exist
      become_user: odoo15
      become: yes
      ansible.builtin.file:
        path: /opt/odoo15/odoo-custom-addons
        state: directory
        mode: '0755'
    - name: Create a configuration file odoo.conf
      ansible.builtin.template:
        dest: /etc/odoo15.conf
        src: 'odoo15_conf.j2'
        mode: '0640'
        owner: odoo15
      notify:
           - Restart odoo15
    - name: Create a configuration file odoo.conf
      ansible.builtin.template:
        dest: /etc/systemd/system/odoo15.service
        src: 'odoo15_service.j2'
        mode: '0755'
        owner: root
      notify:
           - Restart odoo15
    - name: enabling and notify the odoo service
      ansible.builtin.systemd:
        daemon_reload: yes
        enabled: yes
        name: odoo15
    - name: "Install postgresql packages"
      ansible.builtin.apt: 
        name: [ "postgresql" ]
        state: present
    - name: "Install Python packages"
      pip: 
        name: psycopg2-binary  
        state: present 
    - name: "Find out if PostgreSQL is initialized"
      ansible.builtin.stat:
        path: "/etc/postgresql/12/main/pg_hba.conf"
      register: postgres_data
    - name: "Initialize PostgreSQL"
      shell: 
        cmd: "service postgresql@12-main initdb"
      when: not postgres_data.stat.exists 
    - name: "Start and enable services"
      service: 
        name: postgresql@12-main
        state: started
        enabled: yes
    - name: "Create odoo database"
      postgresql_db:
        state: present
        name: "{{ db_name }}"
      become: yes
      become_user: postgres
    - name: "Create db user"
      postgresql_user:
        state: present
        name: "{{ db_user }}"
        role_attr_flags: CREATEDB,CREATEROLE,SUPERUSER
        password: "{{ db_password }}"
      become: yes
      become_user: postgres
    - name: "Grant db user access to odoo db"
      postgresql_privs:
        type: database
        database: "{{ db_name }}"
        roles: "{{ db_user }}"
        grant_option: no
        privs: all
      become: yes
      become_user: postgres
    - name: "Allow md5 connection for the db user"
      postgresql_pg_hba:
        dest: "/etc/postgresql/12/main/pg_hba.conf"
        contype: host
        databases: all
        method: md5
        users: "{{ db_user }}"
        create: true
      become: yes
      become_user: postgres
      notify: restart postgres
  handlers:
    - name: Restart odoo15
      ansible.builtin.systemd:
        name: odoo15
        state: restarted
        daemon_reload: yes
    - name: restart postgres  
      ansible.builtin.systemd:    
        name: postgresql@12-main
        state: restarted
        daemon_reload: yes

        

